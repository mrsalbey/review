# Generated by Django 5.2 on 2025-04-24 14:54

import uuid

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import reviews.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ReviewCategory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Уникальный идентификатор категории",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Например: Диплом, Мобильный, Спринт",
                        max_length=100,
                        unique=True,
                        verbose_name="Название категории",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True,
                        max_length=100,
                        unique=True,
                        verbose_name="URL-идентификатор",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Описание категории"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Дата создания"),
                ),
            ],
            options={
                "verbose_name": "Категория проектов",
                "verbose_name_plural": "Категории проектов",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "id",
                    models.CharField(
                        db_index=True,
                        default=reviews.models.generate_uuid,
                        editable=False,
                        max_length=36,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                code="invalid_uuid",
                                message='Введите корректный UUID в формате: "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"',
                                regex="^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
                            )
                        ],
                        verbose_name="UUID идентификатор",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="Имя студента")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Дата создания"),
                ),
            ],
            options={
                "verbose_name": "Студент",
                "verbose_name_plural": "Студенты",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Уникальный ID ревью",
                    ),
                ),
                (
                    "project_id",
                    models.CharField(
                        help_text="36-символьный UUID проекта (с дефисами)",
                        max_length=36,
                        verbose_name="ID проекта",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Дата создания"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь системы",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="reviews.reviewcategory",
                        verbose_name="Категория проекта",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="reviews.student",
                        verbose_name="Студент",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ревью проекта",
                "verbose_name_plural": "Ревью проектов",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ReviewMetadata",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Уникальный ID метаданных",
                    ),
                ),
                (
                    "full_name",
                    models.CharField(max_length=150, verbose_name="Полное имя метаданных"),
                ),
                (
                    "object_id",
                    models.CharField(
                        help_text="Формат: 8-4-4-4-12 hex-символов (с дефисами)",
                        max_length=36,
                        validators=[
                            django.core.validators.RegexValidator(
                                code="invalid_uuid",
                                message='Введите корректный UUID в формате: "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"',
                                regex="^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
                            )
                        ],
                        verbose_name="Идентификатор объекта метаданных",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Дата создания записи"),
                ),
                (
                    "review",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="metadata_items",
                        to="reviews.review",
                        verbose_name="Связанное ревью",
                    ),
                ),
            ],
            options={
                "verbose_name": "Метаданные ревью",
                "verbose_name_plural": "Метаданные ревью",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(fields=["review"], name="reviews_rev_review__d8188d_idx"),
                    models.Index(fields=["object_id"], name="reviews_rev_object__1222da_idx"),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="review",
            index=models.Index(fields=["project_id"], name="reviews_rev_project_16b900_idx"),
        ),
        migrations.AddIndex(
            model_name="review",
            index=models.Index(fields=["created_at"], name="reviews_rev_created_bdcc91_idx"),
        ),
    ]
